--OneToMany

DROP TABLE "Order";
DROP TABLE Customer;


--Родительская таблица
CREATE TABLE Customer
(
    customer_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    name        CHAR(50) NOT NULL,
    email      char(50) NOT NULL UNIQUE
);
INSERT INTO Customer (NAME, EMAIL) VALUES ('Piter','piter@mail.ru');
INSERT INTO Customer (NAME, EMAIL) VALUES ('Piter1','piter1@mail.ru');


--Дочерняя таблица, т.к. есть внешний ключ - связь с др. таблицей
CREATE TABLE "Order"
(
    order_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    customer_id int REFERENCES Customer (customer_id) ON DELETE CASCADE ,
    order_name  CHAR(50) NOT NULL,
    date_order DATE NOT NULL
);

INSERT INTO "Order" (customer_id, order_name,date_order) VALUES (1,'lemon', '11-Sep-2024 11:02:00');
INSERT INTO "Order" (customer_id, order_name, date_order) VALUES (1,'product', '11-Sep-2024 11:02:00');
INSERT INTO "Order" (customer_id, order_name, date_order) VALUES (2,'product', '11-Sep-2024 11:02:00');

-- если в строке с внешним ключем пропишем CASCADE, то удаление будет и в родительской и дочерней табл. все что связано с этим ключом
-- customer_id int NOT NULL REFERENCES Customer (customer_id) ON DELETE CASCADE ,

--если не указываем, то по умолчанию RESTRICT - выдаст ошибку, о том что есть связь и удалить не возможно
--customer_id int NOT NULL REFERENCES Customer (customer_id)  ,

--если укажем SET NULL, то в дочерней таблице вместо id запишется NULL
--customer_id int  REFERENCES Customer (customer_id) ON DELETE SET NULL ,
DELETE FROM Customer where customer_id = 1;

SELECT *FROM Customer;
SELECT *FROM "Order";